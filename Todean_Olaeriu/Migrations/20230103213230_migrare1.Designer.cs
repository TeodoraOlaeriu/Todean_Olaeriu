// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todean_Olaeriu.Data;

#nullable disable

namespace Todean_Olaeriu.Migrations
{
    [DbContext(typeof(Todean_OlaeriuContext))]
    [Migration("20230103213230_migrare1")]
    partial class migrare1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Todean_Olaeriu.Models.Medic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Medic");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Orar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Zi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Orar");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Serviciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("MedicID")
                        .HasColumnType("int");

                    b.Property<int?>("OrarID")
                        .HasColumnType("int");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Titlu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MedicID");

                    b.HasIndex("OrarID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Specialitate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeSpecialitate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Specialitate");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.SpecialitateServiciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.Property<int>("SpecialitateID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ServiciuID");

                    b.HasIndex("SpecialitateID");

                    b.ToTable("SpecialitateServiciu");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Serviciu", b =>
                {
                    b.HasOne("Todean_Olaeriu.Models.Medic", "Medic")
                        .WithMany()
                        .HasForeignKey("MedicID");

                    b.HasOne("Todean_Olaeriu.Models.Orar", "Orar")
                        .WithMany("Servicii")
                        .HasForeignKey("OrarID");

                    b.Navigation("Medic");

                    b.Navigation("Orar");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.SpecialitateServiciu", b =>
                {
                    b.HasOne("Todean_Olaeriu.Models.Serviciu", "Serviciu")
                        .WithMany("SpecialitatiServiciu")
                        .HasForeignKey("ServiciuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Todean_Olaeriu.Models.Specialitate", "Specialitate")
                        .WithMany("SpecialitatiServiciu")
                        .HasForeignKey("SpecialitateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serviciu");

                    b.Navigation("Specialitate");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Orar", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Serviciu", b =>
                {
                    b.Navigation("SpecialitatiServiciu");
                });

            modelBuilder.Entity("Todean_Olaeriu.Models.Specialitate", b =>
                {
                    b.Navigation("SpecialitatiServiciu");
                });
#pragma warning restore 612, 618
        }
    }
}
